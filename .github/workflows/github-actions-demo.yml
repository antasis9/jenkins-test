name: Github Actions Demo
on: [push]
jobs:
  Explore-Github-Actions:
    runs-on: self-hosted
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event!."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls -a ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
  check-bats-version:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "14"
      - run: npm install -g bats
      - run: bats -v
  jest:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "14"
      - run: npm install
      - run: npm test
      - name: ReportGenerator
  # You may pin to the exact commit or the version.
  # uses: danielpalme/ReportGenerator-GitHub-Action@144108ca5fb5604cec16b02bd8e3a0ac2c5f0e31
      - uses: danielpalme/ReportGenerator-GitHub-Action@5.1.4
        with:
          # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
          reports: cobertura-coverage.xml
          # The directory where the generated report should be saved.
          #targetdir: # default is coveragereport
          # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummary
          #reporttypes: # optional, default is HtmlInline;Cobertura
          # Optional directories which contain the corresponding source code (separated by semicolon). The source directories are used if coverage report contains classes without path information.
          #sourcedirs: # optional, default is 
          # Optional directory for storing persistent coverage information. Can be used in future reports to show coverage evolution.
          #historydir: # optional, default is 
          # Default directory for installing the dotnet tool.
          #toolpath: # optional, default is reportgeneratortool
          # Optional plugin files for custom reports or custom history storage (separated by semicolon).
          #plugins: # optional, default is 
          # Optional list of assemblies that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
          #assemblyfilters: # optional, default is +*
          # Optional list of classes that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
          #classfilters: # optional, default is +*
          # Optional list of files that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
          #filefilters: # optional, default is +*
          # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
          #verbosity: # optional, default is Info
          # Optional title.
          #title: # optional, default is 
          # Optional tag or build version.
          #tag: # optional, default is ${{ github.run_number }}_${{ github.run_id }}
          # Optional license for PRO version. Get your license here: https://danielpalme.github.io/ReportGenerator/pro
          #license: # optional, default is 
          # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings
          #customSettings: # optional, default is 
      
  print:
    runs-on: self-hosted
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
